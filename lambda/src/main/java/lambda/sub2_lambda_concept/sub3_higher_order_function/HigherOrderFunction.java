package lambda.sub2_lambda_concept.sub3_higher_order_function;

public interface HigherOrderFunction {

    /**
     * 고차 함수(Higher-Order Function)에 대해 알아본다.
     *
     * 고차 함수..
     *      고차 함수는 함수를 값으로 다루는 함수를 의미한다.
     *      고차 함수는 아래 두가지 중 하나를 만족한다.
     *          1. 함수를 파라미터 인자로 받는 함수(메서드)
     *          2. 함수를 반환하는 함수(메서드)
     *
     * Java 에서는 기본적으로 메서드는 메서드를 인자로 받을 수 없고 메서드가 메서드를 반환할 수 없다.
     * 하지만, Java 의 메서드는 고차 함수인데..
     * 함수형 인터페이스를 구현한 람다와 익명 클래스는 객체 인스턴스이지만 의미 자체가 하나의 코드 영역에 대한 함수이므로
     * Java 의 메서드가 함수형 인터페이스를 구현한 람다와 익명 클래스를 인자로 받거나 반환 한다면 고차함수가 된다.
     *
     *
     * 참고.
     * 여러 메서드를 구현한 익명 클래스를 어떤 메서드가 인자로 받거나 반환한다면..
     * 이 경우의 익명 클래스는 하나의 함수가 아니므로 개념상 고차함수가 아니게 된다.
     *
     * 참고.
     * 일급 객체 (First-Class Object)..
     *      변수에 할당 가능
     *      함수의 인자로 전달 가능
     *      함수의 반환값으로 사용 가능
     * -> Java 에서는 일반적인 객체도 일급 객체이지만, 익명 함수(함수형 인터페이스를 구현한 람다나 익명 클래스)도 일급 객체이다.
     *
     * 일급 함수 (First-Class Function)..
     *      함수가 일급 객체로 취급 될때 이를 일급 함수라 부른다.
     * -> Java 에서는 익명 함수(함수형 인터페이스를 구현한 람다나 익명 클래스)가 일급 함수이다.
     *
     * 정리
     * 고차 함수는 일급 객체인 함수(일급 함수)를 인자로 받거나 반환한다.
     * Java 에서는 람다 표현식과 메서드 참조를 통해 일급 함수를 구현하고, 이를 인자로 받거나 반환하는 메서드가 고차 함수로 동작
     */
}
